#!/usr/bin/env bash

STAGE_ONE="jraph_build"
STAGE_TWO="jraph"
IMAGE_NAME="$STAGE_TWO:latest"
TEST_DATABASE="testdb"
JRAPH_DATABASE="jraph"

# TODO create help function which lists functions and their docstrings
# Has ability to limit to one docstring e.g.
# $ ndev --help **prints all docstrings**
# $ ndev build --help **prints build docstring**

check_pass () {
	if [[ ! -v JRAPH_SA_PASSWORD ]]; then
		echo "\$JRAPH_SA_PASSWORD required!"
		exit 1
	fi
}

build () {
	# TODO REDO using CONTAINERFILE
	# TODO configgify msql setup options
	# TODO SECURITY remove publish-all
	echo "creating $STAGE_ONE"
	podman create \
		--env-file="config.env" \
		--memory="2g" \
		--name="$STAGE_ONE" \
		--workdir="/root" \
		--interactive \
		--tty \
		--publish-all \
		--replace \
		--volume="./portal/:/root/portal:Z" \
		"fedora:latest" \
		"portal/install-sqlserver.sh"

	echo "starting $STAGE_ONE"
	podman start --attach --interactive $STAGE_ONE
	# TODO make it so sqlserver doesn't try to start at the end of 
	# the msql configuration process
	
	echo "committing $STAGE_ONE to $IMAGE_NAME"
	podman commit \
		--change CMD=/opt/mssql/bin/sqlservr \
		$STAGE_ONE \
		$IMAGE_NAME
	
	echo "creating local jraph container $STAGE_TWO"
	podman create \
		--env-file="config.env" \
		--interactive \
		--tty \
		--publish-all \
		--volume="./portal/:/root/portal:Z" \
		--name="$STAGE_TWO" \
		--replace \
		"$IMAGE_NAME"
}

start () {
	podman start "$@" $STAGE_TWO
}

start.jraph () {
	podman exec --interactive --tty $STAGE_TWO \
		python3 portal/jraph_tool/return_kml.py
}

test.init () {
	check_pass
	podman exec --interactive --tty \
		$STAGE_TWO \
		/opt/mssql-tools18/bin/sqlcmd \
			-C -U sa -P $JRAPH_SA_PASSWORD \
			-i portal/jraph_tool/lib/testdb-init.sql 
}

test.db () {
	check_pass
	podman exec --interactive --tty \
		$STAGE_TWO \
		/opt/mssql-tools18/bin/sqlcmd \
			-C -U sa -P $JRAPH_SA_PASSWORD -d $TEST_DATABASE \
			-Q "select * from dbo.Products"
}

shell () {
	podman exec --interactive --tty \
		$STAGE_TWO /bin/bash
}

client_request () {
	podman exec --interactive --tty $STAGE_TWO \
		curl localhost:5000
}

sql () {
	# pass in input file
	# $ ./ndev sql portal/jraph_tool/lib/example.sql
	check_pass
	podman exec --interactive --tty \
		$STAGE_TWO \
		/opt/mssql-tools18/bin/sqlcmd \
			-C -U sa -P $JRAPH_SA_PASSWORD -W \
			-i $1
}

"$@"
